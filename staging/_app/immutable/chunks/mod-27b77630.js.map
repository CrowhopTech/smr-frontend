{"version":3,"file":"mod-27b77630.js","sources":["../../../../../../src/lib/utils/mod.ts"],"sourcesContent":["import satisfies from 'semver/functions/satisfies.js';\nimport minVersion from 'semver/ranges/min-version.js';\nimport type { Maybe, Version } from '$lib/generated';\n\nexport const modStatus = (latestVersions?: {\n  alpha?: Maybe<Pick<Version, 'sml_version'>>;\n  beta?: Maybe<Pick<Version, 'sml_version'>>;\n  release?: Maybe<Pick<Version, 'sml_version'>>;\n}) => {\n  if (!latestVersions) {\n    return 'outdated';\n  }\n\n  let result: 'outdated' | 'own-risk' = 'outdated';\n  for (const releaseType of Object.keys(latestVersions)) {\n    const version = latestVersions[releaseType];\n    if (version && version.sml_version) {\n      try {\n        if (satisfies(minVersion(version.sml_version), '>=3.0.0')) {\n          if (satisfies(minVersion(version.sml_version), '>=3.2.0')) {\n            return undefined;\n          }\n          result = 'own-risk';\n        }\n      } catch (e) {\n        // Ignored\n      }\n    }\n  }\n\n  return result;\n};\n"],"names":["modStatus","latestVersions","result","releaseType","Object","keys","version","sml_version","satisfies","minVersion"],"mappings":"kDAIa,KAAAA,GAAaC,IAKxB,GAAKA,CAAAA,EACI,MAAA,WAGT,GAAIC,GAAkC,WACtC,SAAWC,KAAeC,QAAOC,KAAKJ,GAAiB,CACrD,KAAMK,GAAUL,EAAeE,GAC3B,GAAAG,GAAWA,EAAQC,YACjB,GAAA,CACF,GAAIC,EAAUC,EAAWH,EAAQC,WAAAA,EAAc,SAAY,EAAA,CACzD,GAAIC,EAAUC,EAAWH,EAAQC,WAAAA,EAAc,SAAY,EAClD,OAEAL,EAAA,kBAQV,CAAA,CAAA,MAAAA"}