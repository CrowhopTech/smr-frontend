{"version":3,"file":"index.svelte-47359178.js","sources":["../../../../../../src/routes/settings/index.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { mutation } from '@urql/svelte';\n  import { UpdateUserDocument } from '$lib/generated';\n  import Toast from '$lib/components/general/Toast.svelte';\n  import { goto } from '$app/navigation';\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { svelteReporter, ValidationMessage } from '@felte/reporter-svelte';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { user } from '$lib/stores/user';\n  import * as zod from 'zod';\n  import type { Form } from '@felte/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import Textfield from '@smui/textfield';\n  import type { Writable } from 'svelte/store';\n  import Button from '@smui/button';\n\n  let errorMessage = '';\n  let errorToast = false;\n\n  const updateUser = mutation({\n    query: UpdateUserDocument\n  });\n\n  export const userSchema = zod.object({\n    avatar: zod.optional(zod.any().refine((logo) => 'name' in logo && 'size' in logo && 'type' in logo)),\n    username: zod.string().min(3).max(32)\n  });\n\n  let form: Form<{ [key: string]: string }>['form'];\n  let data: Writable<{ username: string }>;\n\n  $: {\n    if ($user) {\n      const createdForm = createForm({\n        initialValues: {\n          username: $user.username\n        },\n        extend: [validator, svelteReporter],\n        validateSchema: userSchema,\n        onSubmit: (data: { username: string; avatar: unknown }) => {\n          updateUser({\n            user: trimNonSchema(data, userSchema),\n            userId: $user.id\n          }).then((value) => {\n            if (value.error) {\n              console.error(value.error.message);\n              errorMessage = 'Error editing guide: ' + value.error.message;\n              errorToast = true;\n            } else {\n              // TODO Toast or something\n              goto(base + '/user/' + value.data.updateUser.id);\n            }\n          });\n        }\n      });\n\n      form = createdForm.form;\n      data = createdForm.data;\n    }\n  }\n\n  $: if (!errorToast) errorMessage = '';\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Change your user settings\" title=\"Settings\" />\n</svelte:head>\n\n<h1 class=\"text-4xl my-4 font-bold\">Settings</h1>\n\n<Card>\n  <Content>\n    {#if $user === null}\n      <p>Please log in</p>\n    {:else}\n      <form use:form>\n        <div class=\"grid grid-flow-row gap-6\">\n          <div class=\"grid grid-flow-row gap-2\">\n            <label for=\"avatar\">Avatar:</label>\n            <input\n              id=\"avatar\"\n              class=\"base-input\"\n              name=\"avatar\"\n              type=\"file\"\n              accept=\"image/png,image/jpeg,image/gif\"\n              placeholder=\"Avatar\"\n            />\n            <ValidationMessage for=\"avatar\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div class=\"grid grid-flow-row gap-2\">\n            <Textfield bind:value={$data.username} label=\"Username\" required />\n            <ValidationMessage for=\"username\" let:messages={message}>\n              <span class=\"validation-message\">{message || ''}</span>\n            </ValidationMessage>\n          </div>\n\n          <div>\n            <Button type=\"submit\" variant=\"outlined\">Save</Button>\n          </div>\n        </div>\n      </form>\n    {/if}\n  </Content>\n</Card>\n\n<Toast bind:running={errorToast}>\n  <span>{errorMessage}</span>\n</Toast>\n"],"names":["zod.object","zod.optional","zod.any","zod.string","createForm","validator"],"mappings":"8/BA0F0D,yBAAA,qGAMvB,MAAM,4BAAN,KAAM,yHACmB,yBAAA,uLAhB5B,0SAAA,ipBAH1B,SACE,OACE,OACE,qBACA,iCAaF,6CAOA,8JANyB,KAAM,iaApBhC,sDAAA,sCAAH,mEAe0C,QAAW,wKAA7C,uCAAkC,QAAW,uDAOX,QAAW,wKAA7C,uCAAkC,QAAW,oEAKN,oBAAA,+GA5B5C,QAAU,iqBAqCV,8CAAA,2BAAP,iCAAO,gRADY,2BAAA,iGAxCe,mNAAA,2KAApC,oMAwCqB,2VA5Ff,GAAe,GACf,EAAa,QAEX,GAAa,IACjB,MAAO,KAGI,EAAaA,IACxB,OAAQC,GAAaC,KAAU,OAAQ,GAAS,QAAU,IAAQ,QAAU,IAAQ,QAAU,KAC9F,SAAUC,KAAa,IAAI,GAAG,IAAI,SAGhC,GACA,+BAgE6B,EAAM,aAAN,GAAM,mCAepB,2DA5Eb,QACI,GAAcC,IAClB,eACE,SAAU,EAAM,UAElB,QAASC,GAAW,IACpB,eAAgB,EAChB,SAAW,IACT,GACE,KAAM,GAAc,EAAM,GAC1B,OAAQ,EAAM,KACb,KAAM,IACH,EAAM,MACR,SAAQ,MAAM,EAAM,MAAM,aAC1B,EAAe,wBAA0B,EAAM,MAAM,aACrD,EAAa,KAGb,GAAK,GAAO,SAAW,EAAM,KAAK,WAAW,aAMrD,EAAO,EAAY,YACnB,EAAO,EAAY,qBAIf,QAAY,EAAe"}