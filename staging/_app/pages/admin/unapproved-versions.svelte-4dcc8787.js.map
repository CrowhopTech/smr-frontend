{"version":3,"file":"unapproved-versions.svelte-4dcc8787.js","sources":["../../../../../../src/routes/admin/unapproved-versions.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { ApproveVersionDocument, DenyVersionDocument, GetUnapprovedVersionsDocument } from '$lib/generated';\n  import { mutation, operationStore, query } from '@urql/svelte';\n  import { writable } from 'svelte/store';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { API_REST } from '$lib/core';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  // TODO Selectable\n  const perPage = 20;\n\n  const versions = operationStore(GetUnapprovedVersionsDocument, {\n    filter: {\n      offset: 0,\n      limit: perPage\n    }\n  });\n\n  const page = writable(1);\n  let totalVersions: number;\n\n  page.subscribe((p) => ($versions.variables.filter.offset = (p - 1) * perPage));\n\n  $: totalVersions = $versions?.data?.getUnapprovedVersions?.count;\n\n  const approveVersionMut = mutation({\n    query: ApproveVersionDocument\n  });\n\n  const approveVersion = (versionId: string) => {\n    approveVersionMut({ versionId }).then(() => {\n      versions.reexecute();\n    });\n  };\n\n  const denyVersionMut = mutation({\n    query: DenyVersionDocument\n  });\n\n  const denyVersion = (versionId: string) => {\n    denyVersionMut({ versionId }).then(() => {\n      versions.reexecute();\n    });\n  };\n\n  query(versions);\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Unapproved mod versions\" title=\"Admin: Unapproved Versions\" />\n</svelte:head>\n\n{#if totalVersions}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n\n<Card>\n  {#if $versions.fetching}\n    <Content>Loading...</Content>\n  {:else if $versions.error}\n    <Content>Oh no... {$versions.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Mod</Cell>\n          <Cell>Version</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $versions.data.getUnapprovedVersions.versions as version}\n          <Row>\n            <Cell>{version.mod.name}</Cell>\n            <Cell>{version.version}</Cell>\n            <Cell>{prettyDate(version.created_at)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" on:click={() => approveVersion(version.id)}>Approve</Button>\n                <Button variant=\"outlined\" on:click={() => denyVersion(version.id)}>Deny</Button>\n                <Button\n                  variant=\"outlined\"\n                  href={API_REST + '/mod/' + version.mod_id + '/versions/' + version.id + '/download'}\n                >\n                  Download\n                </Button>\n                <Button variant=\"outlined\" href={base + '/mod/' + version.mod_id + '/version/' + version.id}>\n                  View\n                </Button>\n              </div>\n            </Cell>\n          </Row>\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalVersions}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <PageControls totalPages={Math.ceil(totalVersions / perPage)} currentPage={page} />\n  </div>\n{/if}\n"],"names":[],"mappings":"s6BA4DgC,KAAK,KAAK,KAAgB,eAAuB,iPAF/E,SACE,8DAC4B,KAAK,KAAK,KAAgB,siCAc1C,mBAAA,4EACA,uBAAA,gFACA,4BAAA,wwCAOG,MAAQ,IAAI,gFAAZ,MAAQ,IAAI,sDACZ,MAAQ,mFAAR,MAAQ,yDACR,EAAW,MAAQ,uFAAnB,EAAW,MAAQ,4EAGiD,uBAAA,gFACH,oBAAA,6EAIpE,wBAAA,iFAG4F,oBAAA,yXAJpF,EAAW,QAAU,MAAQ,OAAS,aAAe,MAAQ,GAAK,8FAIzC,EAAO,QAAU,MAAQ,OAAS,YAAc,MAAQ,iXAT3F,yOAKU,EAAW,QAAU,MAAQ,OAAS,aAAe,MAAQ,GAAK,mFAIzC,EAAO,QAAU,MAAQ,OAAS,YAAc,MAAQ,0mDAf1F,KAAU,KAAK,sBAAsB,8BAA1C,6PAAK,KAAU,KAAK,sBAAsB,2BAA1C,6HAAA,8DAAA,2qBAZa,KAAU,MAAM,4BAA1B,gCAAA,oEAAU,KAAU,MAAM,gFAF1B,0BAAA,wHADN,MAAU,WAEL,KAAU,yXA0CQ,KAAK,KAAK,KAAgB,eAAuB,8LAD7E,gEAC4B,KAAK,KAAK,KAAgB,wOArDnD,4EAmDA,wXAnDA,oKAmDA,mTA9FG,GAAU,iCAEV,GAAW,GAAe,IAC9B,QACE,OAAQ,EACR,MAAO,8BAIL,GAAO,GAAS,MAClB,GAEJ,EAAK,UAAW,QAAO,EAAU,UAAU,OAAO,OAAU,GAAI,GAAK,WAI/D,GAAoB,GACxB,MAAO,KAGH,EAAkB,IACtB,GAAoB,cAAa,UAC/B,EAAS,eAIP,EAAiB,GACrB,MAAO,KAGH,EAAe,IACnB,GAAiB,cAAa,UAC5B,EAAS,eAIb,GAAM,cAsCmD,EAAe,EAAQ,SACvB,EAAY,EAAQ,8CA7D1E,EAAgB,GAAW,MAAM,uBAAuB"}