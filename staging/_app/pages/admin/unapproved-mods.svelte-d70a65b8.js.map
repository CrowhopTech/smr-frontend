{"version":3,"file":"unapproved-mods.svelte-d70a65b8.js","sources":["../../../../../../src/routes/admin/unapproved-mods.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { ApproveModDocument, DenyModDocument, GetUnapprovedModsDocument } from '$lib/generated';\n  import { mutation, operationStore, query } from '@urql/svelte';\n  import { writable } from 'svelte/store';\n  import PageControls from '$lib/components/utils/PageControls.svelte';\n  import { base } from '$app/paths';\n  import MetaDescriptors from '$lib/components/utils/MetaDescriptors.svelte';\n  import Card, { Content } from '@smui/card';\n  import DataTable, { Head, Body, Row, Cell } from '@smui/data-table';\n  import Button from '@smui/button';\n  import { prettyDate } from '$lib/utils/formatting';\n\n  // TODO Selectable\n  const perPage = 20;\n\n  const mods = operationStore(GetUnapprovedModsDocument, {\n    filter: {\n      offset: 0,\n      limit: perPage\n    }\n  });\n\n  const page = writable(1);\n  let totalMods: number;\n\n  page.subscribe((p) => ($mods.variables.filter.offset = (p - 1) * perPage));\n\n  $: totalMods = $mods?.data?.getUnapprovedMods?.count;\n\n  const approveModMut = mutation({\n    query: ApproveModDocument\n  });\n\n  const approveMod = (modId: string) => {\n    approveModMut({ modId }).then(() => {\n      mods.reexecute();\n    });\n  };\n\n  const denyModMut = mutation({\n    query: DenyModDocument\n  });\n\n  const denyMod = (modId: string) => {\n    denyModMut({ modId }).then(() => {\n      mods.reexecute();\n    });\n  };\n\n  query(mods);\n</script>\n\n<svelte:head>\n  <MetaDescriptors description=\"Unapproved mods\" title=\"Admin: Unapproved Mods\" />\n</svelte:head>\n\n{#if totalMods}\n  <div class=\"mb-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n\n<Card>\n  {#if $mods.fetching}\n    <Content>Loading...</Content>\n  {:else if $mods.error}\n    <Content>Oh no... {$mods.error.message}</Content>\n  {:else}\n    <DataTable class=\"max-w-full\">\n      <Head>\n        <Row>\n          <Cell>Mod</Cell>\n          <Cell>Description</Cell>\n          <Cell>Release Date</Cell>\n          <Cell><!-- Buttons --></Cell>\n        </Row>\n      </Head>\n      <Body>\n        {#each $mods.data.getUnapprovedMods.mods as mod}\n          <Row>\n            <Cell>{mod.name}</Cell>\n            <Cell>{mod.short_description}</Cell>\n            <Cell>{prettyDate(mod.created_at)}</Cell>\n            <Cell>\n              <div class=\"grid grid-flow-col gap-4\">\n                <Button variant=\"outlined\" on:click={() => approveMod(mod.id)}>Approve</Button>\n                <Button variant=\"outlined\" on:click={() => denyMod(mod.id)}>Deny</Button>\n                <Button variant=\"outlined\" href={base + '/mod/' + mod.id}>View</Button>\n              </div>\n            </Cell>\n          </Row>\n        {/each}\n      </Body>\n    </DataTable>\n  {/if}\n</Card>\n\n{#if totalMods}\n  <div class=\"mt-5 ml-auto flex justify-end\">\n    <div>\n      <PageControls totalPages={Math.ceil(totalMods / perPage)} currentPage={page} />\n    </div>\n  </div>\n{/if}\n"],"names":[],"mappings":"u0BA2DgC,KAAK,KAAK,KAAY,eAAuB,iPAF3E,SACE,8DAC4B,KAAK,KAAK,KAAY,siCActC,mBAAA,4EACA,2BAAA,oFACA,4BAAA,wwCAOG,MAAI,gFAAJ,MAAI,sDACJ,MAAI,6FAAJ,MAAI,mEACJ,EAAW,MAAI,uFAAf,EAAW,MAAI,4EAG6C,uBAAA,gFACH,oBAAA,6EACF,oBAAA,qXAAzB,EAAO,QAAU,MAAI,gUAHxD,sNAGmC,EAAO,QAAU,MAAI,+jDATvD,KAAM,KAAK,kBAAkB,0BAAlC,6PAAK,KAAM,KAAK,kBAAkB,uBAAlC,6HAAA,8DAAA,2qBAZa,KAAM,MAAM,4BAAtB,gCAAA,oEAAU,KAAM,MAAM,gFAFtB,0BAAA,wHADN,MAAM,WAED,KAAM,2XAmCc,KAAK,KAAK,KAAY,eAAuB,iPAF3E,SACE,8DAC4B,KAAK,KAAK,KAAY,4NA9CjD,2EA2CA,wXA3CA,oKA2CA,mTAtFG,GAAU,iCAEV,GAAO,GAAe,IAC1B,QACE,OAAQ,EACR,MAAO,8BAIL,GAAO,GAAS,MAClB,GAEJ,EAAK,UAAW,QAAO,EAAM,UAAU,OAAO,OAAU,GAAI,GAAK,WAI3D,GAAgB,GACpB,MAAO,KAGH,EAAc,IAClB,GAAgB,UAAS,UACvB,EAAK,eAIH,EAAa,GACjB,MAAO,KAGH,EAAW,IACf,GAAa,UAAS,UACpB,EAAK,eAIT,GAAM,cAsCmD,EAAW,EAAI,SACf,EAAQ,EAAI,8CA7DlE,EAAY,GAAO,MAAM,mBAAmB"}