{"version":3,"file":"GuideForm-3cb7d947.js","sources":["../../../../../src/lib/models/guides.ts","../../../../../src/lib/components/guides/GuideForm.svelte"],"sourcesContent":["import * as zod from 'zod';\n\nexport type GuideData = {\n  name: string;\n  short_description: string;\n  guide: string;\n};\n\nexport const guideSchema = zod.object({\n  name: zod.string().min(3).max(32),\n  short_description: zod.string().min(16).max(128),\n  guide: zod.string()\n});\n","<script lang=\"ts\">\n  import { createForm } from 'felte';\n  import { validator } from '@felte/validator-zod';\n  import { svelteReporter, ValidationMessage } from '@felte/reporter-svelte';\n  import type { GuideData } from '$lib/models/guides';\n  import { guideSchema } from '$lib/models/guides';\n  import { trimNonSchema } from '$lib/utils/forms';\n  import { markdown } from '$lib/utils/markdown';\n  import Textfield from '@smui/textfield';\n  import Button from '@smui/button';\n\n  export let onSubmit: (data: GuideData) => void;\n  export let initialValues: GuideData | undefined = {\n    name: '',\n    guide: '',\n    short_description: ''\n  };\n  export let submitText = 'Create';\n\n  const { form, data } = createForm<GuideData>({\n    initialValues: initialValues,\n    extend: [validator, svelteReporter],\n    validateSchema: guideSchema,\n    onSubmit: (data: GuideData) => onSubmit(trimNonSchema(data, guideSchema))\n  });\n\n  $: preview = ($data.guide as string) || '';\n</script>\n\n<form use:form>\n  <div class=\"grid grid-flow-row gap-6\">\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.name} label=\"Name\" required />\n      <ValidationMessage for=\"name\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid grid-flow-row gap-2\">\n      <Textfield bind:value={$data.short_description} label=\"Short Description\" required />\n      <ValidationMessage for=\"short_description\" let:messages={message}>\n        <span class=\"validation-message\">{message || ''}</span>\n      </ValidationMessage>\n    </div>\n\n    <div class=\"grid gap-6 split\">\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <Textfield textarea class=\"vertical-textarea\" bind:value={$data.guide} label=\"Guide\" required input$rows={10} />\n        <ValidationMessage for=\"guide\" let:messages={message}>\n          <span class=\"validation-message\">{message || ''}</span>\n        </ValidationMessage>\n      </div>\n      <div class=\"grid grid-flow-row gap-2 auto-rows-max\">\n        <span>Preview:</span>\n        {#await markdown(preview) then previewRendered}\n          <div class=\"markdown-content right\">{@html previewRendered}</div>\n        {/await}\n      </div>\n    </div>\n\n    <div>\n      <Button variant=\"outlined\" type=\"submit\">{submitText}</Button>\n    </div>\n  </div>\n</form>\n\n<style lang=\"postcss\">\n  .split {\n    grid-template-columns: 50% 50%;\n\n    & .right {\n      max-height: 75vh;\n      overflow: auto;\n    }\n  }\n</style>\n"],"names":["zod.object","zod.string","createForm","validator"],"mappings":"sbAQa,IAAcA,GAAW,CACpC,KAAMC,KAAa,IAAI,GAAG,IAAI,IAC9B,kBAAmBA,KAAa,IAAI,IAAI,IAAI,KAC5C,MAAOA,8BCuBiC,QAAW,wKAA7C,uCAAkC,QAAW,uDAOX,QAAW,wKAA7C,uCAAkC,QAAW,uDAQT,QAAW,wKAA7C,uCAAkC,QAAW,kGAMF,wKAA3C,2CAA2C,0HAML,kBAAA,wCAAA,0KA7BnB,KAAM,yBAAN,KAAM,qHACe,yBAAA,yGAMrB,KAAM,sCAAN,KAAM,+IAC4B,yBAAA,6IAOmD,IAAhD,KAAM,0BAAN,KAAM,uHACnB,yBAAA,sIAMrC,GAAS,qVADX,uiBAAA,gdAxBd,SACE,OACE,6CAOA,6CAOA,OACE,+CAMA,OACE,sFAOJ,6GA5ByB,KAAM,wHAON,KAAM,uIAQ+B,KAAM,4GAOxD,GAAS,mfA3CZ,eACA,iBACT,KAAM,GACN,MAAO,GACP,kBAAmB,QAEV,aAAa,kBAEhB,OAAM,QAASC,IACN,gBACf,QAASC,GAAW,IACpB,eAAgB,GAChB,SAAW,GAAoB,EAAS,GAAc,EAAM,wDASnC,EAAM,SAAN,GAAM,8CAON,EAAM,sBAAN,GAAM,2DAQ+B,EAAM,UAAN,GAAM,6LArBnE,EAAW,EAAM,OAAoB"}