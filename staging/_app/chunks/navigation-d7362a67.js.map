{"version":3,"file":"navigation-d7362a67.js","sources":["../../../../runtime/app/navigation.js"],"sourcesContent":["import { renderer, router } from '../client/singletons.js';\nimport { g as get_base_uri } from '../chunks/utils.js';\n\n/**\n * @param {string} name\n */\nfunction guard(name) {\n\treturn () => {\n\t\tthrow new Error(`Cannot call ${name}(...) on the server`);\n\t};\n}\n\nconst disableScrollHandling = import.meta.env.SSR\n\t? guard('disableScrollHandling')\n\t: disableScrollHandling_;\nconst goto = import.meta.env.SSR ? guard('goto') : goto_;\nconst invalidate = import.meta.env.SSR ? guard('invalidate') : invalidate_;\nconst prefetch = import.meta.env.SSR ? guard('prefetch') : prefetch_;\nconst prefetchRoutes = import.meta.env.SSR ? guard('prefetchRoutes') : prefetchRoutes_;\nconst beforeNavigate = import.meta.env.SSR ? () => {} : beforeNavigate_;\nconst afterNavigate = import.meta.env.SSR ? () => {} : afterNavigate_;\n\n/**\n * @type {import('$app/navigation').goto}\n */\nasync function disableScrollHandling_() {\n\trenderer.disable_scroll_handling();\n}\n\n/**\n * @type {import('$app/navigation').goto}\n */\nasync function goto_(href, opts) {\n\treturn router.goto(href, opts, []);\n}\n\n/**\n * @type {import('$app/navigation').invalidate}\n */\nasync function invalidate_(resource) {\n\tconst { href } = new URL(resource, location.href);\n\treturn router.renderer.invalidate(href);\n}\n\n/**\n * @type {import('$app/navigation').prefetch}\n */\nfunction prefetch_(href) {\n\treturn router.prefetch(new URL(href, get_base_uri(document)));\n}\n\n/**\n * @type {import('$app/navigation').prefetchRoutes}\n */\nasync function prefetchRoutes_(pathnames) {\n\tconst matching = pathnames\n\t\t? router.routes.filter((route) => pathnames.some((pathname) => route[0].test(pathname)))\n\t\t: router.routes;\n\n\tconst promises = matching.map((r) => Promise.all(r[1].map((load) => load())));\n\n\tawait Promise.all(promises);\n}\n\n/**\n * @type {import('$app/navigation').beforeNavigate}\n */\nfunction beforeNavigate_(fn) {\n\tif (router) router.before_navigate(fn);\n}\n\n/**\n * @type {import('$app/navigation').afterNavigate}\n */\nfunction afterNavigate_(fn) {\n\tif (router) router.after_navigate(fn);\n}\n\nexport { afterNavigate, beforeNavigate, disableScrollHandling, goto, invalidate, prefetch, prefetchRoutes };\n"],"names":[],"mappings":"oDAeK,KAAC,GAA6C,EAE7C,EAAqD,EAe3D,iBAAqB,EAAM,EAAM,CAChC,MAAO,GAAO,KAAK,EAAM,EAAM,IAchC,WAAmB,EAAM,CACxB,MAAO,GAAO,SAAS,GAAI,KAAI,EAAM,EAAa"}